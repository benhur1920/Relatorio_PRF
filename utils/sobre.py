import streamlit as st
import os
#from utils.totalizadores import *
from utils.marcadores import divisor

def sobre():
    
      
    
    imagem_path1 = os.path.join("imagem", "estrada.jpg")

    st.markdown("<h2 style='text-align: center; '>üö® Introdu√ß√£o ao Estudo dos Acidentes Rodovi√°rios da PRF</h2>", unsafe_allow_html=True)
    st.markdown("<br>", unsafe_allow_html=True)

    # Primeira se√ß√£o com imagem e texto
    col1, col2 = st.columns([2, 3], gap="small")

    with col1:
        st.image(imagem_path1, use_container_width=True, caption="Trecho de uma estrada")


    with col2:
        
        st.markdown(
            """
            <div style="text-align: justify; font-size: 17px">
                <p>
                    A an√°lise dos dados de acidentes de tr√¢nsito √© fundamental para compreender a din√¢mica da seguran√ßa vi√°ria 
                    no Brasil e orientar pol√≠ticas p√∫blicas mais eficazes de preven√ß√£o. De acordo com a Pol√≠cia Rodovi√°ria 
                    Federal (PRF), a malha rodovi√°ria brasileira soma aproximadamente 74 mil quil√¥metros, em um pa√≠s de 
                    dimens√µes continentais, com trechos de pista simples, dupla e m√∫ltipla, variando entre bons e prec√°rios 
                    estados de conserva√ß√£o.
                </p>
                <p>
                    Neste estudo, utilizamos a base de dados da PRF, proveniente dos relat√≥rios de ocorr√™ncias que registram 
                    sinistros nas rodovias federais de todo o pa√≠s. A partir dessas informa√ß√µes, analisamos aspectos como 
                    tipo de rodovia, causa dos acidentes e condi√ß√µes meteorol√≥gicas, entre outros fatores determinantes.
                </p>
                <p>
                    Os n√∫meros revelam uma realidade preocupante: vivemos uma verdadeira situa√ß√£o de guerra no tr√¢nsito, com 
                    a perda de in√∫meras vidas e um elevado n√∫mero de feridos ‚Äî gerando impactos sociais e econ√¥micos expressivos. 
                    Al√©m do sofrimento humano, h√° preju√≠zos significativos para empresas e altos custos p√∫blicos com sa√∫de, 
                    previd√™ncia e recupera√ß√£o de infraestrutura.
                </p>
                <p>
                    O objetivo deste estudo √© dar vida aos dados ‚Äî transformar n√∫meros em informa√ß√£o clara e visual, ajudando a 
                    identificar padr√µes, hor√°rios cr√≠ticos, locais de maior risco e tipos de ocorr√™ncia. Com isso, queremos 
                    estimular a reflex√£o e contribuir para um tr√¢nsito mais seguro, mostrando que cada dado carrega uma 
                    hist√≥ria e pode inspirar uma mudan√ßa.
                </p>
            </div>
            """,
            unsafe_allow_html=True
        )


def objetivo_aplicacao():
    imagem_path2 = os.path.join(os.path.dirname(__file__), '..', 'images', 'lampada.jpg')
    col1, col2 = st.columns([3, 2], gap="small")
    with col1:
        st.markdown("""
        <div contenteditable="false" style="text-align: justify; font-size: 17px;">
            <h3>PredictIm√≥vel Recife</h3>
            <p>
                Esta ferramenta permitir√°  estimar o valor venal com base em estudos estat√≠sticos da base de dados
                do ITBI da Prefeitura do Recife.
            </p>
            <p>Os principais enfoques s√£o:</p>
            <ul>
                <li><strong>Distribui√ß√£o entre zonas e bairros da cidade</strong></li>
                <li><strong>C√°lculo de medidas de tend√™ncia central e dispers√£o</strong></li>
                <li><strong>Consulta e explora√ß√£o da base de dados</strong></li>
                <li><strong>Estimativa preditiva do valor venal utilizando t√©cnicas de Machine Learning</strong></li>
            </ul>
            <p>
                Navegue entre as p√°ginas e conhe√ßa os pain√©is das transmiss√µes imobili√°rias na cidade do Recife.
            </p>
        </div>
        """, unsafe_allow_html=True)
    with col2:
        st.image(imagem_path2, use_container_width=True, clamp=True, caption="Boa ideia")

def mainSobre():
    divisor()
    sobre()
    divisor()
    #objetivo_aplicacao()
    #divisor()
